<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx.xsd
http://www.springframework.org/schema/aop
http://www.springframework.org/schema/aop/spring-aop.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- 组件扫描 主要扫描 -->
    <context:component-scan base-package="com.study">
        <!-- 排除 controller 的扫描 -->
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!-- 告诉spring容器去哪里加载db.peoperties配置文件  -->
    <context:property-placeholder location="classpath:db.properties"/>

    <!-- 整合MyBatis -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="user" value="${user}"/>
        <property name="password" value="${password}"/>
        <property name="jdbcUrl" value="${jdbcUrl}"/>
        <property name="driverClass" value="${driverClass}"/>
    </bean>

    <!-- 配置 MyBatis SqlSessionFactory -->
    <bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!-- mapper文件加载位置 -->
<!--        <property name="mapperLocations" value="classpath:com/study/repository/*.xml"></property>-->
        <!-- 加载 mybatis 配置文件 -->
        <property name="configLocation" value="classpath:MyBatisConfig.xml"/>
    </bean>

    <!-- 扫描自定义的Mapper接口 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.study.repository"/>
    </bean>

    <!-- 让spring容器去管理事务  -->
    <bean name="TransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!-- 事务管理者对象需要依赖 SessionFactory  -->
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 配置事务通知  -->
    <tx:advice id="txAdvice" transaction-manager="TransactionManager">
        <tx:attributes>
            <tx:method name="get*" isolation="READ_COMMITTED" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="add*" isolation="READ_COMMITTED" propagation="SUPPORTS" />
            <tx:method name="write*" isolation="READ_COMMITTED" propagation="SUPPORTS" />
            <tx:method name="*Del" isolation="READ_COMMITTED" propagation="SUPPORTS" />
        </tx:attributes>
    </tx:advice>

    <!-- 配置 aop切入
        业务层实现了接口 proxy-target-class="true"
      -->
    <aop:config proxy-target-class="true">
        <aop:pointcut expression="execution(* com.study.service.impl.*Service*.*(..))" id="ac"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="ac"/>
    </aop:config>

</beans>